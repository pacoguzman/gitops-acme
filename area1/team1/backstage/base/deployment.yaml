apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7007"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: backstage
          image: registry.hub.docker.com/pacoguzman/dev-portal:453a800
          imagePullPolicy: Always
          command: ["node"]
          args:
            - "packages/backend"
            - "--config"
            - "app-config.yaml"
            - "--config"
            - "app-config.prod.yaml"
          ports:
            - name: http
              containerPort: 7007
          envFrom:
            - secretRef:
                name: postgres-secrets
          env:
            - name: BACKSTAGE_URL
              value: http://backstage.192.168.64.7.nip.io
            - name: BACKSTAGE_POSTGRES_HOST
              value: backstage-postgres.backstage.svc.cluster.local
            - name: BACKSTAGE_REDIS_CONNECTION
              value: redis://redis-cache.backstage.svc.cluster.local:6379/0
            - name: ARGOCD_URL
              value: http://argocd.192.168.64.7.nip.io
          volumeMounts:
            - name: config
              mountPath: /app/app-config.prod.yaml
              subPath: app-config.prod.yaml
          #readinessProbe:
          #  httpGet:
          #    port: 7007
          #    path: /healthcheck
          #livenessProbe:
          #  httpGet:
          #    port: 7007
          #    path: /healthcheck
          resources:
            requests:
              memory: 512Mi
            limits:
              memory: 1Gi
      volumes:
        - name: config
          configMap:
            name: backstage-config
